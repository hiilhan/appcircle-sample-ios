# Xcode
# Build, test, and archive an Xcode workspace on macOS.
# Add steps that install certificates, test, sign, and distribute an app, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/xcode

variables:
- group: AppVariables-Common
- group: AppVariables-EAS

trigger:
- test/azure-extension-eas

pool:
  vmImage: 'macos-14' # 'macos-latest' # Cloud
  # name: 'MacOS-Agent' # Self-hosted

steps:
# # BUILD START
# - script: openssl version
#   displayName: 'Check OpenSSL Version'
# - task: InstallAppleCertificate@2
#   inputs:
#     certSecureFile: 'ac-sample-distribution.p12'
#     certPwd: '' # '$(p12-password)'
#     keychain: 'temp'
#     # opensslPkcsArgs: '-legacy' # Note: Enable for Self-hosted agent
# - task: InstallAppleProvisioningProfile@1
#   inputs:
#     provisioningProfileLocation: 'secureFiles'
#     provProfileSecureFile: 'ac-sample-adhoc.mobileprovision'
# - task: Xcode@5
#   inputs:
#     actions: 'clean build'
#     configuration: 'Release'
#     sdk: 'iphoneos'
#     scheme: 'Appcircle'
#     packageApp: true
#     signingOption: 'manual'
#     signingIdentity: '$(APPLE_CERTIFICATE_SIGNING_IDENTITY)'
#     provisioningProfileUuid: '$(APPLE_PROV_PROFILE_UUID)'
# - task: CopyFiles@2
#   inputs:
#     SourceFolder: '$(system.defaultworkingdirectory)'
#     Contents: '**/*.ipa'
#     TargetFolder: '$(build.artifactStagingDirectory)'
#     OverWrite: true
#     flattenFolders: true
# - task: PublishBuildArtifacts@1
#   inputs:
#     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#     ArtifactName: 'ac-sample-artifact'
#     publishLocation: 'Container'
# # BUILD END

# - task: AppcircleEnterpriseStore@0
#   inputs:
#     accessToken: '$(ac-pat)'
#     entProfileId: '$(ac-entp-profile-id-ios)'
#     appPath: '$(Build.ArtifactStagingDirectory)/Appcircle.ipa'
#     summary: '$(ac-summary-notes)'
#     releaseNotes: '$(ac-release-notes)'
#     publishType: 'Beta'

- task: CmdLine@2
  inputs:
    script: |
      echo $(Build.ArtifactStagingDirectory)
      ls -lha $(Build.ArtifactStagingDirectory)
      pwd
      ls -a ./*

- task: AppcircleEnterpriseStore@0
  inputs:
    personalAPIToken: '$(ac-pat)'
    # appPath: '$(Build.ArtifactStagingDirectory)/Appcircle.ipa'
    # appPath: 'output/$(SDK)/$(Configuration)/Appcircle.ipa'
    appPath: 'build/test/empty.ipa'
    summary: '$(ac-summary-notes)'
    releaseNotes: '$(ac-release-notes)'
    publishType: 'None'
